name: üòä Deploiment - Laravel CD

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì¶ R√©cup√©ration du Code
      uses: actions/checkout@v3.5.2
      
    - name: ‚öôÔ∏è Configuration de PHP
      uses: shivammathur/setup-php@2.25.1
      with:
        php-version: '8.2'
        extensions: bcmath, bz2, calendar, Core, ctype, curl, date, dom, exif, FFI, fileinfo, filter, ftp, gd, gettext, hash, iconv, igbinary, imagick, imap, intl, json, libxml, mbstring, mcrypt, mysqli, mysqlnd, openssl, pcntl, pcre, PDO, pdo_mysql, Phar, posix, readline, redis, Reflection, session, shmop, SimpleXML, soap, sockets, sodium, SPL, standard, sysvmsg, sysvsem, sysvshm, tokenizer, xml, xmlreader, xmlrpc, xmlwriter, xsl, zip, zlib, Zend OPcache
        tools: composer:v2

    - name: üìö Installation de NPM
      run: |
        sudo apt-get install -y npm
        npm --version
        
    - name: üöÄ Aller au r√©pertoire Laravel et afficher
      run: |
        cd InstaRepas
        pwd
        ls -la

    - name: üõ†Ô∏è Installation des d√©pendances du projet
      run: |
        composer install --no-progress --prefer-dist --optimize-autoloader
        npm install
      working-directory: ./InstaRepas

    - name: üèóÔ∏è Construction du Projet
      run: |
        npm run build
      working-directory: ./InstaRepas

    - name: üóùÔ∏è Ajouter la cl√© SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

    - name: üîê Configuration de SSH et rsync
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: üöÄ D√©ployer sur le serveur
      run: |
       rsync -r -avz -O --delete-after --exclude=.git --exclude=.github --exclude=dist --exclude=node_modules --exclude=.env --quiet -e 'ssh -p ${{ secrets.REMOTE_PORT }}' ${{ secrets.REMOTE_PATH }} $GITHUB_WORKSPACE/InstaRepas/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_DIR }}
  
    - name: üîÑ Changer les permissions de /storage et bootstrap/cache
      run: |
        ssh -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "${{ secrets.REMOTE_OWN }} ${{ secrets.REMOTE_DIR }}/storage"
        ssh -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "${{ secrets.REMOTE_OWN }} ${{ secrets.REMOTE_DIR }}/bootstrap/cache"
        ssh -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "${{ secrets.REMOTE_MOD }} ${{ secrets.REMOTE_DIR }}/storage"
        ssh -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "${{ secrets.REMOTE_MOD }} ${{ secrets.REMOTE_DIR }}/bootstrap/cache"
  
    - name: üîë Copie du fichier .env si absent
      run: |
        ssh -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "if [ ! -f ${{ secrets.REMOTE_DIR }}/.env ]; then cp ${{ secrets.REMOTE_DIR }}/.env.example ${{ secrets.REMOTE_DIR }}/.env; fi"

    - name: üîÑ G√©n√©rer la cl√© Laravel si n√©cessaire
      run: |
        ssh -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "if grep -q 'APP_KEY=' ${{ secrets.REMOTE_DIR }}/.env && grep -q '^APP_KEY=$' ${{ secrets.REMOTE_DIR }}/.env; then cd ${{ secrets.REMOTE_DIR }} && php artisan key:generate; fi"
